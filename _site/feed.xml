<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jesse Crow</title>
    <description>Portfolio site for Austin-based designer and developer, Jesse Crow.
</description>
    <link>http://www.jessecrow.com/blog/</link>
    <atom:link href="http://www.jessecrow.com/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 21 Dec 2016 20:36:02 -0600</pubDate>
    <lastBuildDate>Wed, 21 Dec 2016 20:36:02 -0600</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>How My Liberal Arts Education Helps Me as a Developer</title>
        <description>&lt;p&gt;Today is my one year workaversary, which also happens to be my one year anniversary of being a professional developer. (“Professional developer” still feels weird to say/write.) It’s been a year full of professional challenges and victories, and I’ve felt prepared every step of the way. &lt;/p&gt;

&lt;p&gt;I accomplished my first year as a developer because of my family and friends. Because of my instructors, classmates, community, and training at The Iron Yard. And more and more over the past year I’ve realized that I accomplished my first year as a developer in some part because of my liberal arts education and humanities background.&lt;/p&gt;

&lt;p&gt;But…a humanities degree from a liberal arts college…applicable to front end development? I know, I’ve heard the skeptics’ sounds before. Writing a thesis on media coverage of major oil spills through the lens of Ulrich Beck’s Risk Society and architecting and documenting a pattern library are different. However, the core skills and competencies I learned in undergrad have been invaluable to my work as a front end developer. Here are four of the biggest lessons from my liberal arts education I’ve carried with me: &lt;/p&gt;

&lt;h5&gt;Appreciating Interconnectedness&lt;/h5&gt;

&lt;p&gt;During my time in undergrad, I got the most of my education when I took time to think about how my classes related to each other. I took a class that combined film theory, communication studies, and history. Sometimes I would walk out of a comm ethics class thinking about what I learned in environmental studies earlier that week. My studies were enriched because of the parallels I could draw between courses.&lt;/p&gt;

&lt;p&gt;At work, specifically, there’s a way for all four disciplines (research, UX, visual design, and front end development) to work together. The work that is produced from an interdisciplinary approach is undeniably better than work produced if everyone worked in a bubble. We can all learn from each other, grow, and better our own work because of that knowledge.&lt;/p&gt;

&lt;h5&gt;Critical and Creative Thinking&lt;/h5&gt;

&lt;p&gt;When I was exposed to a different or unorthodox perspective in a reading assignment or class discussion, I had to reconcile how it fit with my own worldview. I had to really think and have solid reasoning as to why or why not I held a certain view. “Because I’ve always felt this way” was never an acceptable answer.&lt;/p&gt;

&lt;p&gt;As a front end developer, I solve problems daily. Whether it’s thinking about the structure of the project, the structure and architecture of the code itself, debugging, or working with the designers on the team—there are always challenges to solve and learn from. “Because this is the way it’s always been done” is never an acceptable answer.&lt;/p&gt;

&lt;h5&gt;Writing&lt;/h5&gt;

&lt;p&gt;In undergrad, I wrote papers in all of my classes, including science and math. Writing helped the ideas I was learning make more sense. Writing allowed me to put the theories that I learned into practice and helped me understand what I learned. Writing also helped me make sure that I could communicate my ideas to my peers and professors in a way they could understand. Writing is how I grew.&lt;/p&gt;

&lt;p&gt;Writing is a critical skill for developers. Whether it’s documenting code, documenting your process/product (in a way that doesn’t assume a certain level of familiarity so that everyone can understand), or sharing something you know on your blog or in a response to a question on StackOverflow, developers need to know how to write. I think it’s a huge part of how we grow.&lt;/p&gt;

&lt;h5&gt;How, Not What, to Learn&lt;/h5&gt;

&lt;p&gt;The most valuable skill I learned in my liberal arts education was how to learn. I was never spoon fed what I need to learn in order to pass some test. Instead, I learned how to search for what information was missing in my understanding of a topic and make the most of a resource. It was a critical mindset to have.&lt;/p&gt;

&lt;p&gt;Being a front end dev requires this skill. Whether it’s learning a new language or (another) JS framework, a new naming convention, etc. There is always something new to learn, and it’s up to me to find the resources and learn.&lt;/p&gt;

&lt;p&gt;So, Mama Millsaps, here’s to you for preparing me for a career I never thought I would have. Go Majors.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Nov 2016 00:00:00 -0500</pubDate>
        <link>http://www.jessecrow.com/blog/2016/11/02/libarts-in-tech.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2016/11/02/libarts-in-tech.html</guid>
        
        
      </item>
    
      <item>
        <title>Tutorial: Make a Sassy Guessing Game</title>
        <description>&lt;p&gt;A couple months ago, I gave my first technical talk outside of a classroom setting (!), but forgot to blog about it until now. Let’s learn how to use Sass to make a number guessing game! &lt;/p&gt;

&lt;p data-height=&quot;265&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;Eygoao&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;crowjm&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Sass Number Guess Game-Final&quot; data-preview=&quot;true&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/crowjm/pen/Eygoao/&quot;&gt;Sass Number Guess Game-Final&lt;/a&gt; by Jesse Crow (&lt;a href=&quot;http://codepen.io/crowjm&quot;&gt;@crowjm&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;The final game.&lt;/p&gt;

&lt;p&gt;The guessing game works as such: there are five choices, numbers 1 through 5, that you can guess by clicking on or selecting with your keyboard. The goal is to guess the same number that the computer “thought” of. If your guess is correct, one set of styles will render. If your guess is incorrect, a different set of styles will render.&lt;/p&gt;

&lt;p&gt;To build our guessing game, the first thing we’ll need to do is get a random number. There are two Sass number functions that we’ll use to get our random number.&lt;/p&gt;

&lt;p&gt;The first is &lt;code class=&quot;language-sass&quot;&gt;random($number)&lt;/code&gt;. This returns a random number with 0 as the lowest possible value and $number (the value we pass into the function) as the highest possible value. For example, if I write random(5), the computer will generate a number anywhere between 0 and 5.&lt;/p&gt;

&lt;p&gt;The random number the computer generates isn’t necessarily going to be a whole number, which is what we need for the game. We’ll also use &lt;code class=&quot;language-css&quot;&gt;round($number)&lt;/code&gt;, which rounds the number we pass into it to the closest whole number, whether that’s higher or lower. For example, if I write &lt;code class=&quot;language-sass&quot;&gt;random(4.25)&lt;/code&gt;, the computer will round it to 4.&lt;/p&gt;

&lt;p&gt;To make sure we’re using the same number in every part of the logic in the same session, we’ll store our random number in a variable called random-number. We can also pass that variable of random-number into the round number function, so that we will have a nice, whole number to work with.&lt;/p&gt;

&lt;pre class=&quot;language-sass&quot;&gt;&lt;code class=&quot;language-sass&quot;&gt;$random-number: random(5);
round($random-number)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The next tool we’ll need in our toolbox are equality operators. This way we can see if the random number is equal to one of the numbers that can be guessed. There are two equality operators in Sass: &lt;code class=&quot;language-sass&quot;&gt;!=&lt;/code&gt; is not equal to and &lt;code class=&quot;language-sass&quot;&gt;==&lt;/code&gt; is equal to. We’ll use &lt;code class=&quot;language-sass&quot;&gt;==&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The next piece of Sass magic we’ll use are control directives, which &lt;a href=&quot;http://thesassway.com/intermediate/if-for-each-while&quot;&gt;The Sass Way&lt;/a&gt; summarizes well as “provide flow and logic and give you a finite level of decision making.” In the game, we want one set of styles to run if the correct number is chosen, and other set of styles to run if the correct number is not chosen. This is a perfect use case for Sass’ &lt;code class=&quot;language-sass&quot;&gt;@if&lt;/code&gt; and &lt;code class=&quot;language-sass&quot;&gt;@else&lt;/code&gt; control directives. &lt;/p&gt;

&lt;p&gt;In our &lt;code class=&quot;language-sass&quot;&gt;@if&lt;/code&gt; directive, we’ll first set the styles that should render if the user guesses the correct matching number. We’ll do so by saying &lt;code class=&quot;language-sass&quot;&gt;@if round($random-number) == 1 {styles in here}&lt;/code&gt;. Then we’ll use &lt;code class=&quot;language-sass&quot;&gt;@else {styles here}&lt;/code&gt; to set the styles that render if the user guesses incorrectly. We’ll have to write this same code out using each number 1 through 5 in the &lt;code class=&quot;language-sass&quot;&gt;@if&lt;/code&gt; control directive (but I’m only going to show it for the number 1 for the sake of brevity).&lt;/p&gt;

&lt;pre class=&quot;language-sass&quot;&gt;
	&lt;code class=&quot;language-sass&quot;&gt;
		@if round($random-number) == 1 {
		    background-color: pink;
		    background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/229892/ice-cream-parrot.gif);
		    background-repeat: no-repeat;
		    background-size: cover;
		    transition: background-color 1s ease;
		  }
		  @else {
		    background-color: #000;
		    transition: background-color 1s ease;
		  }
		}
		/*write out again, changing the number in the first line to 2, 3, 4, and 5*/
	&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Now, we’ve got our random number, our logic, and our styles and they will all be consistently applied to each number. Try it out! (You will need to refresh though to get another random number). &lt;/p&gt;

&lt;p&gt;However, with the help of a little more Sass magic, we can DRY our code out and make it reusable. ✨✨✨Refactoring time!✨✨✨&lt;/p&gt;

&lt;p&gt;Since we want to reuse the same if/else logic and corresponding styles, we can place the code inside a mixin. We’ll call our mixin game-logic, and pass it $number. Then, in our &lt;code class=&quot;language-sass&quot;&gt;@if&lt;/code&gt; control directive, instead of writing &lt;code class=&quot;language-sass&quot;&gt;@if round($random-number) == 1, 2, 3, 4, 5&lt;/code&gt;, we can write &lt;code class=&quot;language-sass&quot;&gt;@if round($random-number) == $number&lt;/code&gt;. Much simpler and reusable!&lt;/p&gt;

&lt;pre class=&quot;language-sass&quot;&gt;
	&lt;code class=&quot;language-sass&quot;&gt;
		@mixin logic ($number) {
		  @if round($random-number) == $number {
		    background-color: pink;
		    background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/229892/ice-cream-parrot.gif);
		    background-repeat: no-repeat;
		    background-size: cover;
		    transition: background-color 1s ease;
		  }
		  @else {
		    background-color: #000;
		    transition: background-color 1s ease;
		  }
		}

		#number1:checked + span::before {
		  @include logic(1);
		}

		#number2:checked + span::before {
		  @include logic(2);
		}

		#number3:checked + span::before {
		  @include logic(3);
		}

		#number4:checked + span::before {
		  @include logic(4);
		}

		#number5:checked + span::before {
		  @include logic(5);
		}
	&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;We can DRY out our code even more using interpolation and the &lt;code class=&quot;language-sass&quot;&gt;@each&lt;/code&gt; control directive. &lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-sass&quot;&gt;@each&lt;/code&gt; control directive allows us to apply particular styles to each item in a list. We have a list of IDs, #number1 all the way to #number5 that we want to apply the same mixin to. The first thing we do in our control directive is create our list. We’re going to write each $number in 1, 2, 3, 4, 5, so that we can access all those numbers as $number in our mixin. &lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-sass&quot;&gt;@each $number in 1, 2, 3, 4, 5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next, using interpolation and &lt;code class=&quot;language-sass&quot;&gt;@each&lt;/code&gt;’s looping ability, we can write a line that targets each of our ID names #number1-#number5. #number is the start to all our IDs, then #{$number} interpolates all of the numbers that we set in the first line of code, outputting #number1 all the way to #number5. Then we set the rest of what we want to target, and include the mixin, passing it $number, so that the correct number and ID name will be used at the same time. The final code block for this will look like: &lt;/p&gt;

&lt;pre class=&quot;language-sass&quot;&gt;
	&lt;code class=&quot;language-sass&quot;&gt;
		@each $number in 1, 2, 3, 4, 5 {
		  #number#{$number}:checked + span::before {
		    @include game-logic($number);
		  }
		}
	&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;There are more things that went into building this game other than the Sass logic and refactoring. However, those were the most important things to cover in this talk. This game also uses a version of the checkbox hack (you can read more about that here and here), and I spent time ensuring that it could be played if a user could only use their keyboard.&lt;/p&gt;

&lt;p&gt;I learned a lot about refactoring and some Sass super powers making this demo and crafting the corresponding talk. And it let me get out of my comfort zone and practice my public speaking skills. Thanks for having me, ATXSass!&lt;/p&gt;
</description>
        <pubDate>Mon, 31 Oct 2016 00:00:00 -0500</pubDate>
        <link>http://www.jessecrow.com/blog/2016/10/31/sassy-guessing-game.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2016/10/31/sassy-guessing-game.html</guid>
        
        
      </item>
    
      <item>
        <title>Teaching Kids to Code</title>
        <description>&lt;p&gt;I’ve been thinking a lot recently about one of my favorite experiences I had last year and something I hope to do more of this year: teaching kids coding classes. &lt;/p&gt;

&lt;p&gt;Last fall, I spent four Tuesday afternoons teaching 5th graders from a local elementary school basic HTML and CSS. They caught on really quickly and were endlessly curious. It was so fun for me to see them have “click moments” and put their newly learned skills to use. &lt;/p&gt;

&lt;p&gt;We created one &lt;a href=&quot;http://codepen.io/theironyardatxkids/&quot;&gt;CodePen account&lt;/a&gt; that all the students had access to, and from there they each created their own pens. Using CodePen worked out really well as we were able to focus more time on coding skills instead of learning a software. I was also able to create demo pens on things like animation and making shapes using code for the students to reference and have a pen for questions and answers that they could use after the classes ended.&lt;/p&gt;

&lt;p&gt;I think kids learning how to code is important, but not just because of the skill itself. Learning to code is so much more–it teaches skills that are useful in any subject, from language arts, to social studies, to science. Learning to code improves problem solving and critical thinking skills. I encouraged the students who understood a concept to help teach their peers who didn’t understand it yet, which helped promote teamwork. We also talked a lot about frustrations: there’s a lot of frustrations that come along with coding, but learning how to manage them and channel the frustration into solving the problem is an invaluable skill. &lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jan 2016 00:00:00 -0600</pubDate>
        <link>http://www.jessecrow.com/blog/2016/01/20/kids-classes.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2016/01/20/kids-classes.html</guid>
        
        
      </item>
    
      <item>
        <title>2016 Dev/Design Goals</title>
        <description>&lt;p&gt;I can’t believe it’s already 2016! Time has flown by, especially because I’ve been getting acclimated to a new job, new workflow, and learning so many new things. &lt;/p&gt;

&lt;p&gt;2016 will be my first full year as a developer/designer, and I want to make sure I make the most of it. I’m only starting to scatch the surface of things to learn and I’m in awe of all the things I don’t know that I don’t know (and very excited to learn about them!). &lt;/p&gt;

&lt;p&gt;To stay on track, I made a list of goals I want to accomplish this year. You can find them over on my GitHub &lt;a href=&quot;https://github.com/crowjm/2016-goals&quot;&gt;here&lt;/a&gt;. I’ve started breaking things down into managable steps and I think hosting my goals on GitHub will be a good way to easily edit and add things, stay on track/be held accountable, and get feedback on resources, etc. &lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jan 2016 00:00:00 -0600</pubDate>
        <link>http://www.jessecrow.com/blog/2016/01/11/goals.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2016/01/11/goals.html</guid>
        
        
      </item>
    
      <item>
        <title>Desk Dancin&#39; Vol 1</title>
        <description>&lt;p&gt;A few posts back, I mentioned how important the right music is to my process. I’m also a big proponet of dancing all the time, but especially when I get stressed, stumped, need a break, or need to get excited about what I’m working on.&lt;/p&gt;

&lt;p&gt;Today I present Desk Dancin’ Vol 1: a collection of songs that gets me moving and in the zone to get stuff done.&lt;/p&gt;

&lt;iframe src=&quot;https://embed.spotify.com/?uri=spotify%3Auser%3Ajessecrow%3Aplaylist%3A5hc63AvAHoiSAQ71AolWNg&quot; width=&quot;300&quot; height=&quot;380&quot; frameborder=&quot;0&quot; allowtransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 12 Oct 2015 00:00:00 -0500</pubDate>
        <link>http://www.jessecrow.com/blog/2015/10/12/desk-dancing-playlist.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2015/10/12/desk-dancing-playlist.html</guid>
        
        
      </item>
    
      <item>
        <title>Sketchnotes: Q&amp;amp;A With Ethan Marcotte</title>
        <description>&lt;p&gt;Yesterday I sat in on a Q&amp;amp;A session with &lt;a href=&quot;http://ethanmarcotte.com/&quot;&gt;Ethan Marcotte&lt;/a&gt; at The Iron Yard. Ethan is the creator of responsive web design(!), which is the methodology I learned to design websites. I feel very lucky to have been there and to learn first-hand from someone who’s had such an impact on web design. Thanks, Ethan!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/blog/EM-10915-sketchnotes.jpg&quot; alt=&quot;sketchnotes from Ethan Marcotte&#39;s Q&amp;amp;A at The Iron Yard&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Oct 2015 00:00:00 -0500</pubDate>
        <link>http://www.jessecrow.com/blog/2015/10/10/em-sketchnotes.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2015/10/10/em-sketchnotes.html</guid>
        
        
      </item>
    
      <item>
        <title>100 Days Reflections: Part 1</title>
        <description>&lt;p&gt;I’m almost halfway done with my 100 Days challenge. Where has the time gone?! I’m more thankful that I’m doing this sort of challenge every day that passes.&lt;/p&gt;

&lt;p&gt;Here’s some of what I’ve learned from this challenge so far:&lt;/p&gt;

&lt;ul class=&quot;blog-list&quot;&gt;
	&lt;li&gt;It&#39;s much easier to make something when I have a clear plan of what I want to make (big surprise). I&#39;ve learned that if I don&#39;t have a clear plan of action, my designs end up all over the place and less successful than designs that I&#39;ve thought out. I&#39;m starting to hone in on that by having one theme that I work off of. Currently I&#39;m working on a series of Austin icons, focusing on using shapes and shading.&lt;/li&gt;
	&lt;li&gt;I need to have a notebook with me at all times to keep track of ideas, sketch, and practice lettering. On my desk, in my purse, on my bedside table.&lt;/li&gt;
	&lt;li&gt;On days when I&#39;m exhausted and/or stressed, I&#39;m more likely to bake something than design something.&lt;/li&gt;
	&lt;li&gt;I do my best work in the morning, before the pups wake up. No distractions and not having anything else from the day to worry about means that I can focus better on the task at hand.&lt;/li&gt;
	&lt;li&gt;There are ways to get out of a rut. Early in the challenge when I would get stumped, I would give myself a hard time. Now I look through my notebooks for ideas or pick a course to complete on &lt;a href=&quot;https://www.skillshare.com/classes&quot;&gt;Skillshare&lt;/a&gt;.&lt;/li&gt;
	&lt;li&gt;I have more fun working on something that pushes what I know, not projects that play it safe.&lt;/li&gt;
	&lt;li&gt;I stay more in my zone when listening to music. And the music is important! I&#39;ll share a playlist of what&#39;s been on heavy rotation on the blog soon.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 03 Sep 2015 00:00:00 -0500</pubDate>
        <link>http://www.jessecrow.com/blog/2015/09/03/first-100-day-reflections.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2015/09/03/first-100-day-reflections.html</guid>
        
        
      </item>
    
      <item>
        <title>For Grandpa</title>
        <description>&lt;p&gt;When I started my blog, I wanted its sole purpose to be documenting my journey as a designer. I was very adamant that I would keep my personal life out of it. But life shows up and the line between the two gets blurred and here we are.&lt;/p&gt;

&lt;p&gt;I love design because it creates order in chaos. I love design because good design mandates empathy and inclusiveness. And new to my list of reasons why I love design is that it’s a way to feel closer to people I’ve lost.&lt;/p&gt;

&lt;p&gt;Yesterday marked six weeks since my Grandpa passed away. I’d been keeping busy, trying to not think about things, but lately I’ve started to unpack everything. I’ll have flashbacks to the call I got from my Dad telling me that if I wanted to see Grandpa I needed to come now. Back to the VA Hospital in Little Rock—the glow and noises of all the machines, the complete silence and eerie, unsettling feeling of the common areas of the hospital at 3am.&lt;/p&gt;

&lt;p&gt;When we were sorting through belongings the weekend of the funeral, my Mama gave me two albums of photos that Grandpa took in the Blue Ridge Mountains. She told me she thought I would be able to use them and they are the absolute best thing I could have inherited. They’ve been tucked away until today.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/blog/blueridge.jpg&quot; alt=&quot;photos of the Blue Ridge Mountains&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I sorted through the photos and there was one that I kept going back to. I knew the perfect quote to go with it, so I lettered it, brought it into Illustrator and cleaned it up, and added it to the photo. It’s comforting to be able to make things with the photos and have a sense of connection. I’m excited for all the other projects I can use them in and to keep making, keep remembering. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/100days/day26-muir.jpg&quot; alt=&quot;photos of the Blue Ridge Mountains with a John Muir quote&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Aug 2015 00:00:00 -0500</pubDate>
        <link>http://www.jessecrow.com/blog/2015/08/15/for-grandpa.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2015/08/15/for-grandpa.html</guid>
        
        
      </item>
    
      <item>
        <title>100 Days of Making</title>
        <description>&lt;p&gt;There is so much that I want to learn and try and do and make. I have a running list of projects I want to start, skills I want to learn, meals I want to cook, etc. — and it’s extensive. Why aren’t I making something every day?&lt;/p&gt;

&lt;p&gt;I’ve been making excuses. I’m too tired from work, I need to find the right tutorial, maybe once I’m better at Illustrator I can get into more illustration-heavy projects, and so on. Yesterday, when I sat down with Illustrator and made an illustrated portrait of one of my dogs (which I am so proud of, y’all), I realized all of these excuses are complete nonsense. So what if I’m tired? Make a cup of tea and go for a little walk. Who says I need a tutorial, I’ve got a brain and can figure this out! And spoiler alert, self, the only way I’m going to get better at anything is to do the thing, make the thing, pick up the tools and create and revise and create some more.&lt;/p&gt;

&lt;p&gt;Being a new designer is hard, but it’s not a reason to not try. &lt;/p&gt;

&lt;p&gt;I’m feeling inspired and empowered, and I’m starting the 100 Days Project! You can read more about the 100 Days Project &lt;a href=&quot;https://thegreatdiscontent.com/100days&quot;&gt;here&lt;/a&gt;. I’m &lt;em&gt;so&lt;/em&gt; excited to make and create and do and learn and grow. I’ve added a section to this site where you can &lt;a href=&quot;http://jessecrow.com/100days&quot;&gt;follow along&lt;/a&gt; and see what I’m making. &lt;/p&gt;

</description>
        <pubDate>Wed, 22 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://www.jessecrow.com/blog/2015/07/22/starting-100-days.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2015/07/22/starting-100-days.html</guid>
        
        
      </item>
    
      <item>
        <title>Ch-Ch-Ch-Ch-Changes</title>
        <description>&lt;p&gt;The past almost three months since I graduated from The Iron Yard have been full of change. So much so that I’ve neglected this blog. However, that also changes starting today.&lt;/p&gt;

&lt;p&gt;Change can be scary and hard but also refreshing and inspiring. I’m a person of habit—I like having a schedule and knowing what to expect, so change can be hard for me in that regard. I’ve spent a lot of time focusing on adjusting to newness the past few months, and have a new routine established. I feel fulfilled and proud and grateful for all that’s happened.&lt;/p&gt;

&lt;p&gt;Changes include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Getting my first design job! A week after graduation, I started freelancing for &lt;a href=&quot;https://favordelivery.com/&quot;&gt;Favor&lt;/a&gt;. In less than a month, I was on the team full time. I work very closely with the other designer on the team and have learned a lot about print design in the process. I also am much more confident in my Illustrator and Photoshop abilities. I&#39;m currently working on their style guide and am very excited to get my hands dirty with code again.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redesigning my portfolio. My week 11-12 Iron Yard self did a great job of the first design, while simultaneously completing my &lt;a href=&quot;http://jessecrow.com/nps/&quot;&gt;final project&lt;/a&gt;, but I grew increasingly unhappy with the design. I was glad to take a step back, think more about the messages I want to convey, and have a site that I&#39;m very happy with. Of course, I&#39;m always open for feedback! If you have any, you can send it my way &lt;a href=&quot;http://jessecrow.com/contact.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Enjoying all the things I was looking forward to while in school. Spend more quality time with my fella and dogs? Check. Start taking banjo lessons? Check. Find a type of working out I enjoy and stick with it? Check. Spend more time in the sun? Check.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These changes have been good, y’all, and I am so excited about all that’s happened and what’s to come.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Jul 2015 00:00:00 -0500</pubDate>
        <link>http://www.jessecrow.com/blog/2015/07/05/on-change.html</link>
        <guid isPermaLink="true">http://www.jessecrow.com/blog/2015/07/05/on-change.html</guid>
        
        
      </item>
    
  </channel>
</rss>
